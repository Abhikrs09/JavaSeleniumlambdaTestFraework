<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="9" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-07T15:52:38 IST" name="Suite" finished-at="2024-11-07T15:53:49 IST" duration-ms="71037">
    <groups>
    </groups>
    <test started-at="2024-11-07T15:52:38 IST" name="Test" finished-at="2024-11-07T15:53:49 IST" duration-ms="71037">
      <class name="testCases.testCheckboxPage">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testCheckboxPage@7bc10d84]" started-at="2024-11-07T15:52:38 IST" name="setUp" finished-at="2024-11-07T15:52:41 IST" duration-ms="2501" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testCheckboxPage.DisableCheckBoxDemo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="DisableCheckBoxDemo()[pri:0, instance:testCases.testCheckboxPage@7bc10d84]" started-at="2024-11-07T15:52:41 IST" name="DisableCheckBoxDemo" finished-at="2024-11-07T15:52:42 IST" duration-ms="808" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DisableCheckBoxDemo -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testCheckboxPage@7bc10d84]" started-at="2024-11-07T15:52:42 IST" name="testStatus" finished-at="2024-11-07T15:52:42 IST" duration-ms="321" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DisableCheckBoxDemo status=SUCCESS method=testCheckboxPage.DisableCheckBoxDemo()[pri:0, instance:testCases.testCheckboxPage@7bc10d84] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testCheckboxPage@7bc10d84]" started-at="2024-11-07T15:52:42 IST" name="setUp" finished-at="2024-11-07T15:52:43 IST" duration-ms="1330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testCheckboxPage.MutlipleCheckBox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="MutlipleCheckBox()[pri:0, instance:testCases.testCheckboxPage@7bc10d84]" started-at="2024-11-07T15:52:43 IST" name="MutlipleCheckBox" finished-at="2024-11-07T15:52:45 IST" duration-ms="1136" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <a href="https://www.lambdatest.com/selenium-playground/checkbox-demo" class="text-black text-size-14 hover:text-lambda-900 leading-relaxed">...</a> is not clickable at point (144, 377). Other element would receive the click: <li class="">...</li>
  (Session info: chrome=130.0.6723.93)
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ab5bdc9c067e12eb66ce9abb095df713, clickElement {id=f.74BB4C779ECC8F0F50E6375FDC290B45.d.921E1A424373F2FE421163DE351E1CB3.e.54}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 130.0.6723.93, chrome: {chromedriverVersion: 130.0.6723.116 (6ac35f94ae3..., userDataDir: C:\Users\Abhi\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51556}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51556/devtoo..., se:cdpVersion: 130.0.6723.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (ab5bdc9c067e12eb66ce9abb095df713)] -> xpath: //a[contains(text(),'Checkbox Demo')]]
Session ID: ab5bdc9c067e12eb66ce9abb095df713]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <a href="https://www.lambdatest.com/selenium-playground/checkbox-demo" class="text-black text-size-14 hover:text-lambda-900 leading-relaxed">...</a> is not clickable at point (144, 377). Other element would receive the click: <li class="">...</li>
  (Session info: chrome=130.0.6723.93)
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ab5bdc9c067e12eb66ce9abb095df713, clickElement {id=f.74BB4C779ECC8F0F50E6375FDC290B45.d.921E1A424373F2FE421163DE351E1CB3.e.54}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 130.0.6723.93, chrome: {chromedriverVersion: 130.0.6723.116 (6ac35f94ae3..., userDataDir: C:\Users\Abhi\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51556}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51556/devtoo..., se:cdpVersion: 130.0.6723.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (ab5bdc9c067e12eb66ce9abb095df713)] -> xpath: //a[contains(text(),'Checkbox Demo')]]
Session ID: ab5bdc9c067e12eb66ce9abb095df713
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:224)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy30.click(Unknown Source)
at utilities.elementsUtils.clickOnElement(elementsUtils.java:68)
at pages.lambdaHomePage.clickOnBtnChechbox(lambdaHomePage.java:102)
at testCases.testCheckboxPage.MutlipleCheckBox(testCheckboxPage.java:73)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MutlipleCheckBox -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testCheckboxPage@7bc10d84]" started-at="2024-11-07T15:52:45 IST" name="testStatus" finished-at="2024-11-07T15:52:45 IST" duration-ms="396" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MutlipleCheckBox status=FAILURE method=testCheckboxPage.MutlipleCheckBox()[pri:0, instance:testCases.testCheckboxPage@7bc10d84] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testCheckboxPage@7bc10d84]" started-at="2024-11-07T15:52:45 IST" name="setUp" finished-at="2024-11-07T15:52:46 IST" duration-ms="1292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testCheckboxPage.SingleCheckBoxDemo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SingleCheckBoxDemo()[pri:0, instance:testCases.testCheckboxPage@7bc10d84]" started-at="2024-11-07T15:52:46 IST" name="SingleCheckBoxDemo" finished-at="2024-11-07T15:52:47 IST" duration-ms="601" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SingleCheckBoxDemo -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testCheckboxPage@7bc10d84]" started-at="2024-11-07T15:52:47 IST" name="testStatus" finished-at="2024-11-07T15:52:47 IST" duration-ms="194" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SingleCheckBoxDemo status=SUCCESS method=testCheckboxPage.SingleCheckBoxDemo()[pri:0, instance:testCases.testCheckboxPage@7bc10d84] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
      </class> <!-- testCases.testCheckboxPage -->
      <class name="testCases.testHandelWindowsPage">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testHandelWindowsPage@26a4842b]" started-at="2024-11-07T15:53:07 IST" name="setUp" finished-at="2024-11-07T15:53:08 IST" duration-ms="1246" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testHandelWindowsPage.handelTwitterPage() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="handelTwitterPage()[pri:0, instance:testCases.testHandelWindowsPage@26a4842b]" started-at="2024-11-07T15:53:08 IST" name="handelTwitterPage" finished-at="2024-11-07T15:53:47 IST" duration-ms="38914" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebElement.click()" because "webElement" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.click()" because "webElement" is null
at utilities.elementsUtils.typeTextIntoElement(elementsUtils.java:52)
at pages.twitterPage.settextUsername(twitterPage.java:42)
at testCases.testHandelWindowsPage.handelTwitterPage(testHandelWindowsPage.java:46)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handelTwitterPage -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testHandelWindowsPage@26a4842b]" started-at="2024-11-07T15:53:47 IST" name="testStatus" finished-at="2024-11-07T15:53:47 IST" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=handelTwitterPage status=FAILURE method=testHandelWindowsPage.handelTwitterPage()[pri:0, instance:testCases.testHandelWindowsPage@26a4842b] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=130.0.6723.93)
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [0105723629dce1eb3804369d1dddc5b1, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 130.0.6723.93, chrome: {chromedriverVersion: 130.0.6723.116 (6ac35f94ae3..., userDataDir: C:\Users\Abhi\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51794}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51794/devtoo..., se:cdpVersion: 130.0.6723.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 0105723629dce1eb3804369d1dddc5b1]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=130.0.6723.93)
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [0105723629dce1eb3804369d1dddc5b1, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 130.0.6723.93, chrome: {chromedriverVersion: 130.0.6723.116 (6ac35f94ae3..., userDataDir: C:\Users\Abhi\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51794}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51794/devtoo..., se:cdpVersion: 130.0.6723.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 0105723629dce1eb3804369d1dddc5b1
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:591)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:595)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:321)
at utilities.Screenshot.takeScreenShot(Screenshot.java:13)
at basePackage.basePage.testStatus(basePage.java:74)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:63)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:348)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:695)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:671)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:655)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
      </class> <!-- testCases.testHandelWindowsPage -->
      <class name="testCases.testDropDownSearchDemoPage">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testDropDownSearchDemoPage@40e10ff8]" started-at="2024-11-07T15:52:52 IST" name="setUp" finished-at="2024-11-07T15:52:53 IST" duration-ms="1313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testDropDownSearchDemoPage.SelectCountry()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SelectCountry()[pri:0, instance:testCases.testDropDownSearchDemoPage@40e10ff8]" started-at="2024-11-07T15:52:53 IST" name="SelectCountry" finished-at="2024-11-07T15:52:54 IST" duration-ms="718" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectCountry -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testDropDownSearchDemoPage@40e10ff8]" started-at="2024-11-07T15:52:54 IST" name="testStatus" finished-at="2024-11-07T15:52:54 IST" duration-ms="147" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectCountry status=SUCCESS method=testDropDownSearchDemoPage.SelectCountry()[pri:0, instance:testCases.testDropDownSearchDemoPage@40e10ff8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testDropDownSearchDemoPage@40e10ff8]" started-at="2024-11-07T15:52:54 IST" name="setUp" finished-at="2024-11-07T15:52:56 IST" duration-ms="1366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testDropDownSearchDemoPage.SelectFile()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SelectFile()[pri:0, instance:testCases.testDropDownSearchDemoPage@40e10ff8]" started-at="2024-11-07T15:52:56 IST" name="SelectFile" finished-at="2024-11-07T15:52:56 IST" duration-ms="622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectFile -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testDropDownSearchDemoPage@40e10ff8]" started-at="2024-11-07T15:52:56 IST" name="testStatus" finished-at="2024-11-07T15:52:57 IST" duration-ms="187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectFile status=SUCCESS method=testDropDownSearchDemoPage.SelectFile()[pri:0, instance:testCases.testDropDownSearchDemoPage@40e10ff8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testDropDownSearchDemoPage@40e10ff8]" started-at="2024-11-07T15:52:57 IST" name="setUp" finished-at="2024-11-07T15:52:58 IST" duration-ms="1212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testDropDownSearchDemoPage.SelectState()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SelectState()[pri:0, instance:testCases.testDropDownSearchDemoPage@40e10ff8]" started-at="2024-11-07T15:52:58 IST" name="SelectState" finished-at="2024-11-07T15:52:58 IST" duration-ms="614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectState -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testDropDownSearchDemoPage@40e10ff8]" started-at="2024-11-07T15:52:58 IST" name="testStatus" finished-at="2024-11-07T15:52:59 IST" duration-ms="154" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectState status=SUCCESS method=testDropDownSearchDemoPage.SelectState()[pri:0, instance:testCases.testDropDownSearchDemoPage@40e10ff8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
      </class> <!-- testCases.testDropDownSearchDemoPage -->
      <class name="testCases.testDragAndDrop">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testDragAndDrop@275fe372]" started-at="2024-11-07T15:52:47 IST" name="setUp" finished-at="2024-11-07T15:52:48 IST" duration-ms="1388" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testDragAndDrop.dragAndDropDemo1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="dragAndDropDemo1()[pri:0, instance:testCases.testDragAndDrop@275fe372]" started-at="2024-11-07T15:52:48 IST" name="dragAndDropDemo1" finished-at="2024-11-07T15:52:50 IST" duration-ms="1174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragAndDropDemo1 -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testDragAndDrop@275fe372]" started-at="2024-11-07T15:52:50 IST" name="testStatus" finished-at="2024-11-07T15:52:50 IST" duration-ms="190" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dragAndDropDemo1 status=SUCCESS method=testDragAndDrop.dragAndDropDemo1()[pri:0, instance:testCases.testDragAndDrop@275fe372] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testDragAndDrop@275fe372]" started-at="2024-11-07T15:52:50 IST" name="setUp" finished-at="2024-11-07T15:52:51 IST" duration-ms="1348" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testDragAndDrop.dragAndDropDemo2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="dragAndDropDemo2()[pri:0, instance:testCases.testDragAndDrop@275fe372]" started-at="2024-11-07T15:52:51 IST" name="dragAndDropDemo2" finished-at="2024-11-07T15:52:52 IST" duration-ms="833" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragAndDropDemo2 -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testDragAndDrop@275fe372]" started-at="2024-11-07T15:52:52 IST" name="testStatus" finished-at="2024-11-07T15:52:52 IST" duration-ms="195" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dragAndDropDemo2 status=SUCCESS method=testDragAndDrop.dragAndDropDemo2()[pri:0, instance:testCases.testDragAndDrop@275fe372] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
      </class> <!-- testCases.testDragAndDrop -->
      <class name="testCases.testDynamicDataLoading">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testDynamicDataLoading@557a1e2d]" started-at="2024-11-07T15:52:59 IST" name="setUp" finished-at="2024-11-07T15:53:00 IST" duration-ms="1328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testDynamicDataLoading.DataIsLoaded()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="DataIsLoaded()[pri:0, instance:testCases.testDynamicDataLoading@557a1e2d]" started-at="2024-11-07T15:53:00 IST" name="DataIsLoaded" finished-at="2024-11-07T15:53:07 IST" duration-ms="6962" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DataIsLoaded -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testDynamicDataLoading@557a1e2d]" started-at="2024-11-07T15:53:07 IST" name="testStatus" finished-at="2024-11-07T15:53:07 IST" duration-ms="199" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DataIsLoaded status=SUCCESS method=testDynamicDataLoading.DataIsLoaded()[pri:0, instance:testCases.testDynamicDataLoading@557a1e2d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
      </class> <!-- testCases.testDynamicDataLoading -->
      <class name="testCases.testSliderDemoPage">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testSliderDemoPage@7e38a7fe]" started-at="2024-11-07T15:53:47 IST" name="setUp" finished-at="2024-11-07T15:53:48 IST" duration-ms="1296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testSliderDemoPage.testSlider()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSlider()[pri:0, instance:testCases.testSliderDemoPage@7e38a7fe]" started-at="2024-11-07T15:53:48 IST" name="testSlider" finished-at="2024-11-07T15:53:49 IST" duration-ms="740" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSlider -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testSliderDemoPage@7e38a7fe]" started-at="2024-11-07T15:53:49 IST" name="testStatus" finished-at="2024-11-07T15:53:49 IST" duration-ms="184" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSlider status=SUCCESS method=testSliderDemoPage.testSlider()[pri:0, instance:testCases.testSliderDemoPage@7e38a7fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
      </class> <!-- testCases.testSliderDemoPage -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
